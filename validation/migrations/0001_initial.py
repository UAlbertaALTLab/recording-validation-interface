# Generated by Django 2.2.18 on 2021-02-19 20:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalPhrase",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "phrase_hash",
                    models.CharField(
                        help_text="Unique hash to determine if phrase has changed",
                        max_length=64,
                    ),
                ),
                (
                    "transcription",
                    models.CharField(
                        help_text="The transciption of the Cree phrase.", max_length=256
                    ),
                ),
                (
                    "translation",
                    models.CharField(
                        help_text="The English translation of the phrase.",
                        max_length=256,
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[("word", "Word"), ("sentence", "Sentence")],
                        help_text="Is this phrase a word or a sentence?",
                        max_length=8,
                    ),
                ),
                (
                    "validated",
                    models.BooleanField(
                        default=False, help_text="Has this phrase be validated?"
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        choices=[("MD", "Maskwacîs Dictionary"), ("new", "New word")],
                        default="new",
                        help_text="How did we get this phrase?",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "fuzzy_transcription",
                    models.CharField(
                        default="<UNINDEXABLE>",
                        editable=False,
                        help_text="The indexed form of the transcription to facilitate fuzzy matching (automatically managed).",
                        max_length=256,
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        editable=False,
                        help_text="When was this phrase last modified?",
                    ),
                ),
                (
                    "analysis",
                    models.CharField(
                        blank=True,
                        help_text="The analysis of the Cree phrase",
                        max_length=256,
                    ),
                ),
                (
                    "modifier",
                    models.CharField(
                        default="AUTO",
                        help_text="The person who added or modified the phrase",
                        max_length=64,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical phrase",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRecording",
            fields=[
                ("id", models.CharField(db_index=True, max_length=64)),
                (
                    "recording_hash",
                    models.CharField(
                        help_text="Unique hash to determine if recording has changed",
                        max_length=64,
                    ),
                ),
                (
                    "timestamp",
                    models.IntegerField(
                        help_text="The offset (in milliseconds) when the phrase starts in the master file"
                    ),
                ),
                (
                    "quality",
                    models.CharField(
                        blank=True,
                        help_text="Is the recording clean? Is it suitable to use publicly?",
                        max_length=64,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        help_text="The comment provided in the ELAN file",
                        max_length=256,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical recording",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Phrase",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phrase_hash",
                    models.CharField(
                        help_text="Unique hash to determine if phrase has changed",
                        max_length=64,
                    ),
                ),
                (
                    "transcription",
                    models.CharField(
                        help_text="The transciption of the Cree phrase.", max_length=256
                    ),
                ),
                (
                    "translation",
                    models.CharField(
                        help_text="The English translation of the phrase.",
                        max_length=256,
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[("word", "Word"), ("sentence", "Sentence")],
                        help_text="Is this phrase a word or a sentence?",
                        max_length=8,
                    ),
                ),
                (
                    "validated",
                    models.BooleanField(
                        default=False, help_text="Has this phrase be validated?"
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        choices=[("MD", "Maskwacîs Dictionary"), ("new", "New word")],
                        default="new",
                        help_text="How did we get this phrase?",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "fuzzy_transcription",
                    models.CharField(
                        default="<UNINDEXABLE>",
                        editable=False,
                        help_text="The indexed form of the transcription to facilitate fuzzy matching (automatically managed).",
                        max_length=256,
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        auto_now_add=True,
                        help_text="When was this phrase last modified?",
                    ),
                ),
                (
                    "analysis",
                    models.CharField(
                        blank=True,
                        help_text="The analysis of the Cree phrase",
                        max_length=256,
                    ),
                ),
                (
                    "modifier",
                    models.CharField(
                        default="AUTO",
                        help_text="The person who added or modified the phrase",
                        max_length=64,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecordingSession",
            fields=[
                (
                    "id",
                    models.CharField(max_length=19, primary_key=True, serialize=False),
                ),
                (
                    "session_hash",
                    models.CharField(
                        help_text="Unique hash to determine if session has changed",
                        max_length=64,
                    ),
                ),
                ("date", models.DateField(help_text="The day the session occured.")),
                (
                    "time_of_day",
                    models.CharField(
                        blank=True,
                        choices=[("AM", "AM"), ("PM", "PM")],
                        default="",
                        help_text="The time of day the session occured. May be empty.",
                        max_length=2,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DS", "DS"),
                            ("US", "US"),
                            ("KCH", "KCH"),
                            ("OFF", "OFF"),
                        ],
                        default="",
                        help_text="The location of the recordings. May be empty.",
                        max_length=3,
                    ),
                ),
                (
                    "subsession",
                    models.IntegerField(
                        blank=True,
                        help_text="The 'subsession' number, if applicable.",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Speaker",
            fields=[
                (
                    "code",
                    models.CharField(
                        help_text="Short code assigned to speaker in the ellicitation metadata.",
                        max_length=8,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text="The speaker's full name.", max_length=128
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        help_text="Gender of the voice.",
                        max_length=1,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Recording",
            fields=[
                (
                    "id",
                    models.CharField(max_length=64, primary_key=True, serialize=False),
                ),
                (
                    "recording_hash",
                    models.CharField(
                        help_text="Unique hash to determine if recording has changed",
                        max_length=64,
                    ),
                ),
                ("compressed_audio", models.FileField(upload_to="audio/")),
                (
                    "timestamp",
                    models.IntegerField(
                        help_text="The offset (in milliseconds) when the phrase starts in the master file"
                    ),
                ),
                (
                    "quality",
                    models.CharField(
                        blank=True,
                        help_text="Is the recording clean? Is it suitable to use publicly?",
                        max_length=64,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        help_text="The comment provided in the ELAN file",
                        max_length=256,
                    ),
                ),
                (
                    "phrase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="validation.Phrase",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="validation.RecordingSession",
                    ),
                ),
                (
                    "speaker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="validation.Speaker",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="phrase",
            index=models.Index(
                fields=["fuzzy_transcription"], name="fuzzy_transcription_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="phrase",
            index=models.Index(fields=["transcription"], name="transcription_idx"),
        ),
        migrations.AddField(
            model_name="historicalrecording",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalrecording",
            name="phrase",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="validation.Phrase",
            ),
        ),
        migrations.AddField(
            model_name="historicalrecording",
            name="session",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="validation.RecordingSession",
            ),
        ),
        migrations.AddField(
            model_name="historicalrecording",
            name="speaker",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="validation.Speaker",
            ),
        ),
        migrations.AddField(
            model_name="historicalphrase",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
