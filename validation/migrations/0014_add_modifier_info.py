# Generated by Django 2.2.24 on 2021-08-03 19:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("validation", "0013_remove_null_constraint"),
    ]

    operations = [
        migrations.AddField(
            model_name="issue",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user who last modified the issue",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="user_modified_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="modified_on",
            field=models.DateField(
                help_text="When was this issue last modified?", null=True
            ),
        ),
        migrations.AlterField(
            model_name="issue",
            name="created_by_reference",
            field=models.ForeignKey(
                help_text="Reference to user who filed the Issue",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="user_created_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalIssue",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        help_text="The comment left by the validator",
                        max_length=1024,
                    ),
                ),
                (
                    "suggested_cree",
                    models.CharField(
                        blank=True,
                        help_text="The Cree spelling suggested by the validator",
                        max_length=1024,
                    ),
                ),
                (
                    "suggested_english",
                    models.CharField(
                        blank=True,
                        help_text="The English spelling suggested by the validator",
                        max_length=1024,
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        default="",
                        help_text="The person who filed this issue",
                        max_length=64,
                    ),
                ),
                (
                    "created_on",
                    models.DateField(help_text="When was this issue filed?"),
                ),
                (
                    "modified_on",
                    models.DateField(
                        help_text="When was this issue last modified?", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("resolved", "Resolved"), ("open", "Open")],
                        default="open",
                        help_text="The status of the issue",
                        max_length=64,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by_reference",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Reference to user who filed the Issue",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The user who last modified the issue",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "phrase",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="validation.Phrase",
                    ),
                ),
                (
                    "recording",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="validation.Recording",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical issue",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
