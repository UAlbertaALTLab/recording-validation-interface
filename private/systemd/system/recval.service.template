# Service for the Maskwacîs Recordings Validation Interface (recval)
#
# After modifications, let systemd create a symlink to the final file:
# 
#    sudo systemctl link $PWD/recval.service
#    sudo systemctl daemon-reload
#

#! NOTE: This is a template. Copy-paste and modify as appropriate.
#! Search and replace the following values:
#!
#!   ${RECVAL_USER}     -- user running the Python (Gunicorn/Django) processes
#!   ${RECVAL_GROUP}    -- group running the Python (Gunicorn/Django) processes
#!   ${RECVAL_REPO}     -- where the repository is cloned to
#!   ${RECVAL_SOCKET}   -- location to UNIX domain socket. This is arbitrary, but
#!                         it must be set to something www-data can read/write to.
#!   ${RECVAL_PIDFILE}  -- location to a file where Gunicorn will write its PID to.
#!                         ${REVAL_USER} can restart the server by sending SIGHUP
#!                         to the written PID, à la:
#!                             kill -HUP $(cat ${REVAL_PIDFILE})

[Unit]

Description=recval service
After=network.target

[Service]
User=${RECVAL_USER}
Group=${RECVAL_GROUP}
WorkingDirectory=${RECVAL_REPO}
# Note: `--env SCRIPT_NAME=/validation` means the site is supposed to be mounted on http://domain.tld/validation/
# See the WSGI documentation on SCRIPT_NAME.
ExecStart=${RECVAL_REPO}/.venv/bin/gunicorn --access-logfile - --env SCRIPT_NAME=/validation --workers 3 --bind unix:${RECVAL_SOCKET} --pid ${REVAL_PIDFILE} recvalsite.wsgi:application
# Gunicorn will reload if you send SIGHUP to the master PID.
ExecReload=/bin/kill -HUP $MAINPID
# systemd will remove the PID file after termination, but it doesn't actually create it.
PIDFile=${REVAL_PIDFILE}

[Install]
WantedBy=multi-user.target

# vim: set ft=systemd :
